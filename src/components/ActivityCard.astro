---
import urlMetadata from "url-metadata";
import { Icon } from "astro-icon";

const { activity } = Astro.props;
if (!activity.url) return;
try {
  const metadata = await urlMetadata(activity.url);
  if (metadata) {
    activity.metadata = {
      title: metadata["og:title"] as string,
      image: metadata["og:image"] as string,
      domain: activity.url
        .replace("https://", "")
        .replace("http://", "")
        .split("/")[0],
    };
  }
} catch (e) {
  console.log(`Error fetching metadata for ${activity.url}`);
}
---

{
  activity.metadata && activity.metadata.title && activity.metadata.image ? (
    <a
      href={activity.url}
      class="flex flex-col md:flex-row bg-white rounded-lg shadow relative p-2 md:h-32  gap-4 max-w-full md:max-w-md items-center"
      target="_blank"
      rel="noopener noreferrer"
    >
      <Icon
        pack="heroicons-outline"
        name="external-link"
        class="h-4 w-4 absolute bottom-2 md:bottom-auto  md:top-2 right-2 text-gray-400"
      />
      {activity.metadata.image && (
        <div class="aspect-[1.91/1] w-full md:w-auto md:h-full">
          <img
            class="w-full h-full object-cover rounded-lg "
            src={activity.metadata.image}
            alt={activity.metadata.title}
            onerror="this.src='/assets/og-image-not-available.png'"
          />
        </div>
      )}
      <div>
        {activity.metadata.title && (
          <h5 class="text-sm text-primary-darker">
            {activity.metadata.title.length > 130
              ? activity.metadata.title.substring(0, 130) + "..."
              : activity.metadata.title}
          </h5>
        )}
        {activity.metadata.domain && (
          <p class="text-xs text-gray-400">{activity.metadata.domain}</p>
        )}
      </div>
    </a>
  ) : (
    <a href={activity.url} class="text-primary-default">
      Visit activity{" "}
      <Icon
        pack="heroicons-outline"
        name="arrow-right"
        class="w-4 h-4 inline-block"
      />
    </a>
  )
}
